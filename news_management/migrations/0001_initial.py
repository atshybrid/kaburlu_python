# Generated by Django 5.0.1 on 2024-06-02 09:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_language', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NewsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Karnatak', 'Karnatak'), ('Andhra', 'Andhra')], default='Karnatak', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('content_languages', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.URLField(blank=True, max_length=255, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='news_management.category')),
            ],
        ),
        migrations.CreateModel(
            name='EditionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='news_management.editioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='ENewsPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_file', models.URLField(max_length=255)),
                ('image', models.URLField(max_length=255)),
                ('date', models.DateTimeField()),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.editioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='CroppedENewsPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cropped_image', models.URLField(max_length=255)),
                ('enewspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.enewspaper')),
            ],
        ),
        migrations.CreateModel(
            name='ENewsPaperFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('like', models.BooleanField(blank=True, null=True)),
                ('dislike', models.BooleanField(blank=True, null=True)),
                ('angry', models.BooleanField(blank=True, null=True)),
                ('happy', models.BooleanField(blank=True, null=True)),
                ('enewspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.enewspaper')),
            ],
        ),
        migrations.CreateModel(
            name='NewsPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_name', models.CharField(max_length=255)),
                ('rni_registered', models.BooleanField(blank=True, null=True)),
                ('rni_number', models.CharField(blank=True, max_length=20, null=True)),
                ('publisher_name', models.CharField(max_length=255)),
                ('publisher_contact', models.CharField(max_length=15)),
                ('chief_editor_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('address', models.JSONField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.company')),
                ('paper_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.language')),
                ('paper_circulation_states', models.ManyToManyField(blank=True, to='news_management.state')),
            ],
        ),
        migrations.AddField(
            model_name='enewspaper',
            name='newspaper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper'),
        ),
        migrations.CreateModel(
            name='EmployeeIdSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_logo', models.URLField(max_length=255)),
                ('primary_color_code', models.CharField(max_length=100)),
                ('emplyeeid_prefix', models.CharField(max_length=100)),
                ('secondary_color_code', models.CharField(max_length=100)),
                ('authorised_sign', models.URLField(max_length=255)),
                ('terms_conditions', models.JSONField()),
                ('card_validity', models.IntegerField()),
                ('Idcard_templateid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.templates')),
                ('newspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper')),
            ],
        ),
        migrations.CreateModel(
            name='EditionAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition', models.ManyToManyField(to='news_management.editioncategory')),
                ('newspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ManyToManyField(to='news_management.category')),
                ('newspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper')),
            ],
        ),
        migrations.CreateModel(
            name='NewsPaperSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitetitle', models.CharField(blank=True, max_length=250, null=True)),
                ('favicon_logo', models.URLField(blank=True, max_length=250, null=True)),
                ('sitelogo', models.URLField(blank=True, max_length=250, null=True)),
                ('dashboard_logo', models.URLField(blank=True, max_length=250, null=True)),
                ('short_description', models.CharField(blank=True, max_length=250, null=True)),
                ('long_description', models.TextField(blank=True, max_length=250, null=True)),
                ('slogan', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('footer_text', models.CharField(blank=True, max_length=250, null=True)),
                ('newspaper_sitetheme', models.JSONField(blank=True, null=True)),
                ('notification', models.BooleanField(default=False)),
                ('notice_message', models.TextField(blank=True, null=True)),
                ('about_us', models.TextField(blank=True, null=True)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('newspaper_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('epaper_enable', models.BooleanField(default=False)),
                ('epaper_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('epaperdiscription', models.TextField(blank=True, null=True)),
                ('epaper_sitetheme', models.JSONField(blank=True, null=True)),
                ('newspaper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='news_management.newspaper')),
            ],
        ),
        migrations.CreateModel(
            name='PostArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title1', models.CharField(blank=True, max_length=255, null=True)),
                ('title1_color_code', models.CharField(blank=True, max_length=100, null=True)),
                ('title2', models.CharField(blank=True, max_length=255, null=True)),
                ('title2_color_code', models.CharField(blank=True, max_length=100, null=True)),
                ('title3', models.CharField(blank=True, max_length=255, null=True)),
                ('title3_color_code', models.CharField(blank=True, max_length=100, null=True)),
                ('short_news', models.TextField(blank=True, null=True)),
                ('long_news', models.TextField(blank=True, null=True)),
                ('breaking_news', models.BooleanField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], max_length=100)),
                ('meta_keyword', models.JSONField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('publish_status', models.BooleanField(default=False)),
                ('SezReporter_Id', models.IntegerField(blank=True, null=True)),
                ('updated_staff_id', models.IntegerField(blank=True, null=True)),
                ('article_location', models.JSONField(blank=True, null=True)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('kabulru_used_article', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.category')),
                ('news_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.language')),
                ('news_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.newstype')),
                ('template_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.templates')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleViewCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.IntegerField(default=0)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.postarticle')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('like', models.BooleanField(blank=True, null=True)),
                ('dislike', models.BooleanField(blank=True, null=True)),
                ('angry', models.BooleanField(blank=True, null=True)),
                ('happy', models.BooleanField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.postarticle')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('contact_no', models.CharField(max_length=15, unique=True)),
                ('dob', models.CharField(max_length=20)),
                ('father_name', models.CharField(max_length=100)),
                ('staff_type', models.CharField(choices=[('editor', 'Editor'), ('reporter', 'Reporter')], max_length=10)),
                ('reporter_type', models.CharField(choices=[('bureau_incharge', 'Bureau Incharge'), ('staff_reporter', 'Staff Reporter'), ('rc_incharge', 'RC Incharge'), ('reporter', 'Reporter')], max_length=20)),
                ('pin_code', models.IntegerField()),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('work_dists', models.TextField(blank=True, null=True)),
                ('work_dist', models.CharField(blank=True, max_length=50, null=True)),
                ('work_const', models.CharField(blank=True, max_length=50, null=True)),
                ('division', models.CharField(blank=True, max_length=50, null=True)),
                ('work_mandal', models.CharField(blank=True, max_length=50, null=True)),
                ('news_auto_publish', models.BooleanField(default=False)),
                ('child_articles_update_publish_status', models.BooleanField(default=False)),
                ('address', models.JSONField()),
                ('employee_photo', models.URLField(blank=True, max_length=250, null=True)),
                ('last_working_details', models.JSONField(blank=True, null=True)),
                ('work_area', models.CharField(max_length=200)),
                ('acknowledgement_id', models.BooleanField(default=False)),
                ('acknowledgement_image', models.URLField(blank=True, max_length=250, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_expiry', models.BigIntegerField(blank=True, null=True)),
                ('subscription_status', models.CharField(blank=True, max_length=50, null=True)),
                ('staff_kyc', models.BooleanField(default=False)),
                ('subscription_enabled', models.BooleanField(default=False)),
                ('subscription_amount', models.IntegerField()),
                ('recurring_count', models.IntegerField()),
                ('newspaper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper')),
                ('parent_reporter_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='news_management.staff')),
            ],
        ),
        migrations.AddField(
            model_name='postarticle',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='news_management.staff'),
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(max_length=100)),
                ('entity', models.CharField(max_length=100)),
                ('interval', models.IntegerField()),
                ('period', models.CharField(max_length=100)),
                ('item', models.JSONField()),
                ('notes', models.JSONField()),
                ('created_at', models.BigIntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company')),
                ('newspaper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news_management.newspaper')),
            ],
        ),
        migrations.AddField(
            model_name='postarticle',
            name='tags',
            field=models.ManyToManyField(blank=True, to='news_management.tag'),
        ),
        migrations.CreateModel(
            name='UploadDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50)),
                ('document_name', models.CharField(max_length=100)),
                ('document_data', models.URLField(max_length=100)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_documents', to='news_management.staff')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
            },
        ),
    ]
